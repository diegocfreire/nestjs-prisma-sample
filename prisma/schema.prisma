// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator prismaClassGenerator {
  provider = "prisma-class-generator"
  dryRun   = true // Parametro para gerar diretamente os arquivos (model/DTO) baseados no prisma ou exibir apenas no console (true - console | false - arquivos)
  output   = "../src/dto"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  users User[]

  @@map("profiles")
}

model User {
  id         Int    @id @default(autoincrement())
  profile_id Int
  name       String
  email      String @unique
  password   String

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  profile Profile @relation(fields: [profile_id], references: [id])
  audits  Audit[]

  @@map("users")
}

enum Operation {
  INSERT
  UPDATE
  DELETE
}

model Audit {
  id      Int  @id @default(autoincrement())
  user_id Int?

  table       String    @db.VarChar()
  operation   Operation
  description String?   @db.VarChar()
  data_before Json?     @db.JsonB
  data_after  Json?     @db.JsonB

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User? @relation(fields: [user_id], references: [id])

  @@map("audits")
}
